services:
  postgres-productdb:
    image: postgres:14
    container_name: postgres-productdb
    environment:
      POSTGRES_DB: productdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5434:5432"
    networks:
      - backend

  postgres-cartdb:
    image: postgres:14
    container_name: postgres-cartdb
    environment:
      POSTGRES_DB: cartdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5435:5432"
    networks:
      - backend

  postgres-orderdb:
    image: postgres:14
    container_name: postgres-orderdb
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5436:5432"
    networks:
      - backend

  postgres-invoicedb:
    image: postgres:14
    container_name: postgres-invoicedb
    environment:
      POSTGRES_DB: invoicedb
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5437:5432"
    networks:
      - backend

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: password
    ports:
      - "8081:80"
    depends_on:
      - postgres-productdb
      - postgres-cartdb
      - postgres-orderdb
      - postgres-invoicedb
    networks:
      - backend

  product-service:
    container_name: product-service
    image: product-service
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-productdb:5432/productdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
    depends_on:
      - postgres-productdb
    networks:
      - backend

  cart-service:
    container_name: cart-service
    image: cart-service
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-cartdb:5432/cartdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
    depends_on:
      - postgres-cartdb
    networks:
      - backend

  order-service:
    container_name: order-service
    image: order-service
    ports:
      - "8083:8083"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-orderdb:5432/orderdb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
      CART_SERVICE_URL: http://cart-service:8082
      PRODUCT_SERVICE_URL: http://product-service:8080
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - postgres-orderdb
      - kafka
    networks:
      - backend

  invoice-service:
    container_name: invoice-service
    image: invoice-service
    ports:
      - "8084:8084"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres-invoicedb:5432/invoicedb
      SPRING_DATASOURCE_USERNAME: user
      SPRING_DATASOURCE_PASSWORD: password
      SPRING_JPA_DATABASE_PLATFORM: org.hibernate.dialect.PostgreSQLDialect
      ORDER_SERVICE_URL: http://order-service:8083
      KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - postgres-invoicedb
      - kafka
    networks:
      - backend

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - backend

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - backend

networks:
  backend:
    driver: bridge